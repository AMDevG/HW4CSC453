-- WRITE 3 TRIGGERS 
-- MAINTAIN VALUE OF CONTRACTCOUNT ATTRIBUTE IN TASK
--1) NEWCONTRACT TRIGGER
        -- CHECK VALUE OF CONTRACTCOUNT, IF LESS THAN 3 ALLOW INSERT OF ANOTHER WORKER.
                -- IF = 3, CANCEL INSERT, DISPLAY ERROR MESSAGE THAT IT IS FULL

--2) ENDCONTRACT TRIGGER
        -- FIRES WHEN USER ATTEMPTS TO DELETE ONE OR MORE ROWS FROM CONTRACT
            --  UPDATES VALUES OF CONTRACT COUNT FOR ANY EFFECTED TASK
            -- DECREASES VALUE OF CONTRACTCOUNT EACH TIME A WORKER IS REMOVED
--3) NOCHANGES TRIGGER
        -- FIRES WHEN USER ATTEMPTS TO UPDATE ONE OR MORE ROWS OF CONTRACT
        -- CANCELS UPDATES AND DISPLAYS ERROR MESSAGE STATING NO UPDATES ARE PERMITTED TO EXISTING ROWS
        -- STATEMENT LEVEL TRIGGER
        
--1&2 ARE ROW LEVEL TRIGGERS


-- BUG IS UPDATING EVERY TASK WITH CONCOUNT
CREATE or REPLACE TRIGGER NewContract
BEFORE INSERT ON Contract FOR EACH ROW
DECLARE
conCount Number;
BEGIN

Select ContractCount into conCount from Task Where taskID = :new.taskID;
DBMS_OUTPUT.PUT_LINE('tASKid BEING UPDATED ' || :new.taskID);

IF conCount < 3 Then
    conCount := conCount +1;
    Update Task SET contractCount = conCount Where taskID = :new.taskID;
    DBMS_OUTPUT.PUT_LINE('Countract COunt= ' || concount);
ELSE
    raise_application_error (-20101,'Contract is full');
End IF;
END;
/



insert into contract values('901','9',0);
--Select * from task;

--Insert into Task VALUES ('901', 'Gardening',0);

--UPDATE Task SET ContractCount = 0 WHere TaskID = 333;



