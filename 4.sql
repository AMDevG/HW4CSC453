-- WRITE 3 TRIGGERS 
-- MAINTAIN VALUE OF CONTRACTCOUNT ATTRIBUTE IN TASK
--1) NEWCONTRACT TRIGGER
        -- CHECK VALUE OF CONTRACTCOUNT, IF LESS THAN 3 ALLOW INSERT OF ANOTHER WORKER.
                -- IF = 3, CANCEL INSERT, DISPLAY ERROR MESSAGE THAT IT IS FULL

--2) ENDCONTRACT TRIGGER
        -- FIRES WHEN USER ATTEMPTS TO DELETE ONE OR MORE ROWS FROM CONTRACT
            --  UPDATES VALUES OF CONTRACT COUNT FOR ANY EFFECTED TASK
            -- DECREASES VALUE OF CONTRACTCOUNT EACH TIME A WORKER IS REMOVED
--3) NOCHANGES TRIGGER
        -- FIRES WHEN USER ATTEMPTS TO UPDATE ONE OR MORE ROWS OF CONTRACT
        -- CANCELS UPDATES AND DISPLAYS ERROR MESSAGE STATING NO UPDATES ARE PERMITTED TO EXISTING ROWS
        -- STATEMENT LEVEL TRIGGER
        
--1&2 ARE ROW LEVEL TRIGGERS

--Select * from contract;
--Select * from task;

CREATE OR REPLACE PROCEDURE CheckContractVal(TaskIDIN VARCHAR)
AS
contractval Number;
Begin
Select ContractCount into contractVal from Task Where TaskIDIn = Task.TaskID;
DBMS_OUTPUT.PUT_LINE('Made it into checkval procedure');
End;
/

CREATE or REPLACE TRIGGER NewContract
BEFORE INSERT ON Contract
BEGIN
DBMS_OUTPUT.PUT_LINE('Firing Contract Insert Trigger, Calling procedure');
--CheckContractVal('896');
END;
/

--insert into contract values('896','1',0);
--Select * from task;





